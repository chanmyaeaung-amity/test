name: Android CI

on:
  workflow_dispatch: # Allows manual triggering
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'master' # Default branch to use if none is specified
        type: string
      client:
        description: 'client'
        required: true
        default: 'staging'  # Optional default value
        type: choice
        options:
          - staging
          - ekogreen

env:
  VERSIONING_FILE: "buildSrc/versioning.json"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }} # Checkout the specified branch
    
    
    - name: set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Generate version code using Java
      id: generate_version_code
      run: |
          # Generate version code (current timestamp in seconds)
          VERSION_CODE=$(date +%s)
          
          # Output the generated version code
          echo "Generated version code: $VERSION_CODE"
          
          # Save the generated version code for later use
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

    - name: Update version
      uses: sebasptsch/json-edit-action@v1.3.1
      with:
        path: buildSrc/versioning.json
        key: version_code
        value: ${{ env.VERSION_CODE }}


    - name: Commit and push changes
      run: |
        git config --global user.name "ekoserver"
        git config --global user.email "chanmyae@amitysolutions.com"
        git commit -am "Applied ${{ github.event.inputs.client }} config and versioning"
        git push origin HEAD:refs/heads/${{ github.ref_name }}

    - name: Set build variant
      uses: sebasptsch/json-edit-action@v1.3.1
      with:
        path: buildSrc/build_variant.json
        key: active_variant
        value: ${{ github.event.inputs.client }}

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build
      run: ./gradlew clean assembleDebug

    # Step 5: Upload APK as artifact
    - name: Upload APK
      uses: actions/upload-artifact@v4.5.0
      with:
        name: app-build-artifacts
        path: app/build/outputs/apk/**/*.apk # Path to the built APK(s)
