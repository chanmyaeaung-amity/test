name: Android CI

on:
  workflow_dispatch: # Allows manual triggering
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'master' # Default branch to use if none is specified
        type: string
      client:
        description: 'client'
        required: true
        default: 'staging'  # Optional default value
        type: choice
        options:
          - staging
          - ekogreen

env:
  VERSIONING_FILE: "buildSrc/versioning.json"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }} # Checkout the specified branch
    
    
    - name: set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Update version
      uses: jossef/action-set-json-field@v2.1
      with:
        file: buildSrc/versioning.json
        field: version_code
        value: $(date +%s)


    - name: Commit and push changes
      run: |
        git config --global user.name "ekoserver"
        git commit -am "Applied ${{ github.event.inputs.client }} config and versioning"
        git push origin HEAD:refs/heads/${{ github.ref_name }}

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build Apk
      run: ./gradlew clean assembleDebug

    # Step 5: Upload APK as artifact
    - name: Upload APK
      uses: actions/upload-artifact@v4.5.0
      with:
        name: app-build-artifacts
        path: app/build/outputs/apk/**/*.apk # Path to the built APK(s)
